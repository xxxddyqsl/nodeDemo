
koa
基于 Node.js 平台的下一代 web 开发框架
1.简介
    koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写web 应用，
    通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa不在内核方法中绑定任何中间件，
    它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。

当前学习 koa2 (koa1 使用的人较少)
2   #初始化package.json
    npm init
# 安装koa2
    yarn add  koa



 终端 执行命令 node .\index.js  或 nodemon .\index.js  启动服务器


 或者 在 package.json 中 增加
 "scripts": {
    "start": "nodemon ./index.js"
  },
  执行命令 yarn start

// 注意 koa 中注册 应用级中间件的时候 尽量写成 async/await 的形式(等待异步执行完) 因为 在 next() 调用 下一个 中间件 可能存在异步的情况 需要等待执行完 下一个 中间件
  如： app.use( async (ctx,next)=>{
       / 排除 login登录相关的接口和路由
    if(ctx.url.includes('login')){
        // 调用 下一个 中间件
        await next()
        // 控制器回来 后面的代码 不在执行
        return
    }
    console.log(ctx.session)
    // session.user 存入的个人信息 存在 说明未失效
    if(ctx.session.user){
        // next 放行 调用下一个中间件
       await next()
    }else{
        // session 失效 路由重定向
        ctx.redirect('/login')
    }
  })