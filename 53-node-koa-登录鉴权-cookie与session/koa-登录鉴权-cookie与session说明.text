koa-登录鉴权-cookie与session
1 cookie
    koa提供了从上下文直接读取、写入cookie的方法
        ctx.cookies.get(name,[options])读取上下文请求中的cookie
        ctx.cookies.set(name value,[options])在上下文中写入cookie

2 session
    安装 koa-session-minimal 模块
    命令 yarn add koa-session-minimal

    koa-session-minimal 适用于koa2 的session中间件，提供存储介质的读写接口。
    
    const session = require('koa-session-minimal')
    //配置应用级中间件
    app.use(session({
            key:'SESSION_ID,
            cookie:{
                maxAge:1000*60 //过期时间
            }
    }))

  // 注意 koa 中注册 应用级中间件的时候 尽量写成 async/await 的形式(等待异步执行完) 因为 在 next() 调用 下一个 中间件 可能存在异步的情况 需要等待执行完 下一个 中间件
// session 拦截 -  配置 应用级中间件 校验 session+cookie -登录成功之后 会设置 session  案例在 routers文件夹下的users文件夹的index.js 内可见 登录接口
app.use( async (ctx,next)=>{
    console.log(ctx.url)
    // 排除 login登录相关的接口和路由
    if(ctx.url.includes('login')){
        // 调用 下一个 中间件
        await next()
        // 控制器回来 后面的代码 不在执行
        return
    }
    console.log(ctx.session)
    // session.user 存入的个人信息 存在 说明未失效
    if(ctx.session.user){
        // 更新 修改 session 值 而 koa-session-minimal 模块 因为当前session发生改变 会自动更新 session 过期时间
        ctx.session.date=  Date.now(); // 获取时间戳 修改
        // next 放行 调用下一个中间件
       await next()
    }else{
        console.log('session 失效 路由重定向')
        // session 失效 路由重定向
        ctx.redirect('/login')
    }
})